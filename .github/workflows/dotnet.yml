name: Build and Release Multi-Platform

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - { rid: 'win-x86', output: 'OKDPlayer-x86' }
          - { rid: 'win-x64', output: 'OKDPlayer-x64' }
          #- { rid: 'linux-x86', output: 'OKDPlayer-x86' }
          - { rid: 'linux-x64', output: 'OKDPlayer-x64' }
          - { rid: 'linux-arm', output: 'OKDPlayer-arm' }
          - { rid: 'linux-arm64', output: 'OKDPlayer-arm64' }


    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      
      - name: Publish for ${{ matrix.target.rid }}
        run: >
          dotnet publish OKDPlayer.csproj
          -c Release
          -r ${{ matrix.target.rid }}
          --self-contained true
          /p:PublishSingleFile=true
          /p:PublishTrimmed=true
          /p:AssemblyName=${{ matrix.target.output }}
          /p:DebugType=None
          -o ./publish

      - name: Archive published binaries
        run: |
          mkdir -p artifacts
          zip -r "artifacts/${{ matrix.target.output }}.zip" ./publish/*

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-artifact-${{ matrix.target.rid }}
          path: artifacts/${{ matrix.target.output }}.zip


  release:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release and Upload Files
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/*
          generate_release_notes: true
